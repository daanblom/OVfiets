#!/bin/bash

showHelp() {
    cat << EOF
Usage: $(basename "$0") [OPTIONS] SEARCH_TERM

Search for OV-fiets locations and show available bike counts.

Flags (optional):
  -c    Output only the bike count (no station name or icon).
  -s    Output bike count with a ðŸš² icon (for status bar usage).
  -h    Show this help message and exit.

Arguments:
  SEARCH_TERM   A case-insensitive string to search for in station names.

Examples:
  $(basename "$0") Utrecht
  $(basename "$0") -c "Leiden Centraal, Centrumzijde"
  $(basename "$0") -s Voorshoten

EOF
}

bikeAmount () {
  code="$1"
  curl -s "https://ovfietsbeschikbaar.nl/locatie/$code" | grep span | grep text-primary | grep -o ">[0-9]*<" | sed -E 's/(<|>)//g'
}
searchLocation() {
  curl -s "https://ovfietsbeschikbaar.nl/locaties" |
    grep locatie |
    grep -i "$1" |
    grep "</a>" |
    while IFS= read -r line; do
      name=$(echo "$line" | cut -d ">" -f2 | sed 's/<\/a//g')
      code=$(echo "$line" | grep -o 'locatie/[a-z0-9]*' | cut -d "/" -f2)
      close=$(echo "$line" | grep -A 1 $(LC_TIME=nl_NL.UTF-8 date +"%A" | sed 's/.*/\u&/') | tail -n 1 | cut -d "-" -f 2 | sed 's/u<\/td>//g')
      bikes=$(bikeAmount "$code")
      if [[ "$output" == "clean" ]]; then
        echo $bikes
      elif [[ $output == "statusbar" ]]; then
        echo "$bikes ðŸš²"
      elif [[ ! -n $output ]]; then
        echo "$name $bikes ðŸš²"
      fi
    done
}

if [ ! -n "$1" ]; then
  showHelp && exit 1
fi 

while getopts ":chs" opt; do
    case $opt in
        c) output="clean" ;;
        s) output="statusbar" ;;
        h) showHelp ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
        :) echo "Option -$OPTARG requires an argument." >&2; exit 1 ;;
    esac
done
shift $((OPTIND - 1))



searchLocation "$1"
